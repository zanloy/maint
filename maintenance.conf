# Goal is to implement a "maintenance page" that can be enabled/disable dynamically by a server admin,
# to block access to various parts of the edtrm web app during system maintenance
# Goal is to do this entirely inside the Apache config (no app modifications)
# Some advanced mod_rewrite syntax is used here; consult Apache docs if needed

RewriteEngine on
#RewriteLog /tmp/rewrite.log
#RewriteLogLevel 9

# This is a magic URL (which does not exist as a file) the user can request that will merely give him the bypass cookie
# RewriteRule is used instead of Header because its cookie feature supports dynamically calculating the expiration date... a raw Set-Cookie header can specify max-age but that fails on IE
# see Apache docs for full syntax; basically: CO=NAME:VAL:domain[:lifetime[:path[:secure[:httponly]]]]
RewriteRule /bypass.enable.zl - [redirect=200,cookie=edtrm.maint.bypass:true:%{HTTP_HOST}:1440]
<Location /bypass.enable.zl>
  # This URL path doesn't exist as a file, but we want to show some text to the user; the RewriteRule above sets the "status code" to 200, which we catch here because Apache considers it an "error"
  ErrorDocument 200 "<html><head><title>Maintenance page bypass</title></head><body><h1>Maintenance page bypass</h1><p>Cookie is set for bypassing maintenance page.</p></body></html>"
</Location>

# Magic URL the user can request that will revoke the bypass cookie
# Does not exist in filesystem
RewriteRule /bypass.disable.zl - [redirect=200,cookie=edtrm.maint.bypass:false:%{HTTP_HOST}:-9999]
<Location /bypass.disable.zl>
  ErrorDocument 200 "<html><head><title>Maintenance page bypass</title></head><body><h1>Maintenance page bypass</h1><p>Cookie for bypassing maintenance page is cleared.</p></body></html>"
</Location>

# if we have the bypass cookie, skip the next 6 RewriteRules
# If you add a RewriteRule below for a new path to block, increment the count for this RewriteRule where it says skip=N
RewriteCond %{HTTP_COOKIE} edtrm.maint.bypass=true [OR]
RewriteCond %{REQUEST_URI} ^/maintenance [OR]
RewriteCond %{REQUEST_URI} ^/server-status
RewriteRule / - [skip=1]

# If the global maint file is touch'ed, and we are requesting any URI, force the response code to 418
RewriteCond /var/www/html/maint -f
RewriteRule / - [redirect=418,last]

# Future: add more Location sections here for other paths we want to control

# This path is relative to the DocumentRoot, and its contents will be shown when a RewriteRule above sets a 418 status code
# The user is not actually redirected to a different URL
ErrorDocument 418 /maintenance/

# vim:syntax=apache
